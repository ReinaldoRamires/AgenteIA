# agents/accounting_helper.py
import google.generativeai as genai
from rich.console import Console

from src import models

console = Console()


class AccountingHelper:
    """
    Usa IA para fornecer recomenda√ß√µes cont√°beis e fiscais iniciais.
    """

    def __init__(self, api_key: str):
        genai.configure(api_key=api_key)
        self.model = genai.GenerativeModel("gemini-1.5-flash-latest")
        console.print("‚úÖ [Accounting Helper] Inicializado.")

    def suggest_structure(self, project: models.Project) -> str:
        """
        Sugere um regime tribut√°rio e um plano de contas simplificado.
        """
        console.print(
            f"üßæ [Accounting Helper] Sugerindo estrutura cont√°bil para: [bold green]{project.name}[/bold green]..."
        )

        prompt = f"""
            Aja como um Contador Consultor especializado em startups.
            Para um novo projeto no Brasil chamado "{project.name}", do tipo "{project.project_type}",
            forne√ßa recomenda√ß√µes iniciais em formato Markdown sobre:

            1.  **Regime Tribut√°rio Sugerido:** Sugira o regime mais prov√°vel para uma empresa nascente (Simples Nacional, Lucro Presumido) e justifique brevemente.
            2.  **Plano de Contas Simplificado:** Liste as 5 principais contas de Despesa e 3 de Receita que a empresa deveria monitorar desde o in√≠cio.
            3.  **Principal Obriga√ß√£o Acess√≥ria:** Cite uma obriga√ß√£o fiscal/cont√°bil mensal importante para uma empresa de servi√ßos no Brasil.
        """

        with console.status(
            "[bold yellow]Aguardando IA preparar as recomenda√ß√µes cont√°beis...[/bold yellow]"
        ):
            response = self.model.generate_content(prompt)

        console.print("üßæ [Accounting Helper] Recomenda√ß√µes geradas com sucesso!")
        return response.text
